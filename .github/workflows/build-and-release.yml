name: Build and Release SimpleModDownloader

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install xmake and dependencies
    - name: Install xmake and dependencies
      run: |
        # Install xmake
        curl -fsSL https://xmake.io/shget.text | bash
        # Add xmake to PATH using environment files
        echo "$(xmake l --path)" >> $GITHUB_PATH
        # Install devkita64 for Switch (required for the toolchain)
        sudo apt update
        sudo apt install -y build-essential wget
        wget https://apt.devkitpro.org/install-devkitpro-pacman
        chmod +x ./install-devkitpro-pacman
        sudo ./install-devkitpro-pacman
        echo "DEVKITPRO=/opt/devkitpro" >> $GITHUB_ENV
        echo "DEVKITA64=/opt/devkitpro/devkitA64" >> $GITHUB_ENV
        source $GITHUB_ENV
        sudo dkp-pacman -Syu switch-dev devkitA64 --noconfirm

    # Step 3: Build the project using xmake
    - name: Build Project
      env:
        DEVKITPRO: /opt/devkitpro
        DEVKITA64: /opt/devkitpro/devkitA64
      run: |
        xmake f -p cross --sdk=/opt/devkitpro/devkitA64
        xmake

    # Step 4: Archive the output
    - name: Archive output
      run: |
        mkdir -p output
        mv ./build/cross/aarch64/release/SimpleModDownloader.nro output/
      # Replace the path above with the actual output path for your .nro file

    # Step 5: Create a GitHub Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }} # Automatically generate version numbers based on workflow run
        release_name: Release v${{ github.run_number }}
        body: |
          This is an automated release generated by the Build and Release workflow.
        draft: false # Set to true if you want the release to be a draft
        prerelease: false # Set to true for pre-releases

    # Step 6: Upload Release Asset
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/SimpleModDownloader.nro
        asset_name: SimpleModDownloader.nro
        asset_content_type: application/octet-stream